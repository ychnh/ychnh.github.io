#!/usr/bin/python4
import os
from os.path import join,exists
from os import system
from ytil import ytl
import argparse

MD = 'md'
HTML = 'html'
WEBROOT = 'https://ychnh.github.io/'

parser = argparse.ArgumentParser(description='Compile')
parser.add_argument('--f', metavar='N', type=bool, default=False, help='Force rebuild')
args = parser.parse_args()
if args.f:
    system('rm -r '+HTML)

def requires_compile_md(fp_md):
    return True
    if args.f:
        return True

    fp_html = get_fphtml(fp_md)
    if not exists(fp_html):
        return True
    return os.path.getmtime(fp_md) >= os.path.getmtime(fp_html)


def dirname(d):
    return './'+'/'.join( d.split('/')[1:] )

def comp(fp_md, fp_html):
    dirs = '/'.join( fp_html.split('/')[:-1] )

    if dirs!='' and not os.path.exists(dirs):
        os.makedirs(dirs)


    system('./compile '+fp_md+' '+fp_html)

def md_link_str(name,link):
    return '['+name+']'+'('+link+')'

def build_index(FP_html):
    idnt = '  '
    index_lines = []

    for data in FP_html:
        t = data['type']
        if t == 'dir':
            n = data['name']
            splits = n.split('/')
            try: splits.remove('')
            except ValueError: pass
            #k = len( splits )
            #index_lines.append(  k*'#'+' '+n )
            k = len( splits )-2
            index_lines.append(  k*idnt+'* '+n )
        elif t == 'link':
            n,l = data['name'], data['link']
            k = n.count('/')
            index_lines.append(  k*idnt+'* '+ md_link_str(n,l) )

    print('\n'.join(index_lines) )
    fp_index = 'index.md'
    ytl.writeListToFile(index_lines,fp_index)
    comp(fp_index, 'index.html')



FP_html = []

def get_fphtml(fpmd):
    fp_html = fp_md[:-3] + '.html'
    fp_html = fp_html.replace(MD,HTML,1)
    return fp_html


exclude = ['.git', '.ipynb_checkpoints','__pycache__', 'ytil']


for root, dirs, files in os.walk(MD, topdown=True):
    dirs[:] = [d for d in dirs if d not in exclude]

print(files)

FP_html.append( {'name':dirname(root),'type':'dir'})

for f in files:
    if f[-3:] == '.md':
        fp_md = join(root,f) 
        fp_html = get_fphtml(fp_md)
        if requires_compile_md(fp_md):
            comp(fp_md, fp_html)
        name = fp_html[5:]
        link = WEBROOT+ fp_html
        FP_html.append( {'name':name, 'link':link,'type':'link'})

build_index(FP_html)
#system('./compile '+'index.md')
